{"version":3,"sources":["webpack:///./src/views/auth-layout/registration/registration.vue?98e5","webpack:///./src/views/auth-layout/registration/registration.vue","webpack:///./src/views/auth-layout/registration/registration.vue?430f","webpack:///./src/views/auth-layout/registration/registration.vue?f35f"],"names":["class","tag","onSubmit","col","label","values","name","errors","email","type","showPassword","password","color","changeShowPassword","icon","iconStyle","showConfirmPassword","passwordConfirmation","changeShowConfirmPassword","disabled","meta","valid","components","ErrorField","MDBInput","MDBBtn","MDBRow","MDBCol","MDBContainer","MDBIcon","setup","toast","schema","required","min","oneOf","validationSchema","initialValues","setFieldError","value","Promise","username","res","error","router","push","sessionStorage","getItem","success","render","__scopeId"],"mappings":"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","file":"js/registration.8e09d544.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./registration.vue?vue&type=style&index=0&id=760b1d34&scoped=true&lang=scss\"","<template>\n  <MDBContainer>\n    <MDBRow tag=\"form\" class=\"g-3\" @submit.prevent=\"onSubmit\">\n      <MDBCol col=\"12\">\n        <MDBInput label=\"Name\" v-model=\"values.name\" />\n        <ErrorField> {{ errors.name }} </ErrorField>\n      </MDBCol>\n\n      <MDBCol col=\"12\">\n        <MDBInput label=\"Email\" v-model=\"values.email\" />\n        <ErrorField> {{ errors.email }} </ErrorField>\n      </MDBCol>\n\n      <MDBCol col=\"12\">\n        <div class=\"password-block\">\n          <MDBInput\n            class=\"password-block__input\"\n            label=\"Password\"\n            :type=\"showPassword ? 'text' : 'password'\"\n            v-model=\"values.password\"\n          />\n          <MDBBtn\n            class=\"password-block__show\"\n            color=\"dark\"\n            @click=\"changeShowPassword\"\n          >\n            <MDBIcon\n              :icon=\"showPassword ? 'eye-slash' : 'eye'\"\n              iconStyle=\"fas\"\n            />\n          </MDBBtn>\n        </div>\n        <ErrorField> {{ errors.password }} </ErrorField>\n      </MDBCol>\n\n      <MDBCol col=\"12\">\n        <div class=\"password-block\">\n          <MDBInput\n            class=\"password-block__input\"\n            label=\"Repeat Password\"\n            :type=\"showConfirmPassword ? 'text' : 'password'\"\n            v-model=\"values.passwordConfirmation\"\n          />\n          <MDBBtn\n            class=\"password-block__show\"\n            color=\"dark\"\n            @click=\"changeShowConfirmPassword\"\n          >\n            <MDBIcon\n              :icon=\"showConfirmPassword ? 'eye-slash' : 'eye'\"\n              iconStyle=\"fas\"\n            />\n          </MDBBtn>\n        </div>\n        <!--        <MDBInput label=\"Password\" type=\"password\" v-model=\"values.password\" />-->\n        <ErrorField> {{ errors.passwordConfirmation }} </ErrorField>\n      </MDBCol>\n\n      <MDBCol>\n        <!--        {{ meta.valid === true }}-->\n        <!--        &lt;!&ndash;        &ndash;&gt;-->\n        <MDBBtn\n          color=\"dark\"\n          type=\"submit\"\n          class=\"w-100\"\n          :disabled=\"!meta.valid\"\n        >\n          Register\n        </MDBBtn>\n      </MDBCol>\n    </MDBRow>\n  </MDBContainer>\n</template>\n\n<script lang=\"ts\">\nimport {\n  MDBBtn,\n  MDBCol,\n  MDBContainer,\n  MDBIcon,\n  MDBInput,\n  MDBRow,\n} from 'mdb-vue-ui-kit'\nimport { useField, useForm } from 'vee-validate'\nimport { defineComponent, ref } from 'vue'\nimport { useToast } from 'vue-toastification'\nimport { object, ref as yupRef, string } from 'yup'\n\nimport { register } from '@/api/jwt-api/requests'\nimport ErrorField from '@/components/ErrorField.vue'\nimport router from '@/router'\n\nexport default defineComponent({\n  name: 'registration',\n  components: {\n    ErrorField,\n    MDBInput,\n    MDBBtn,\n    MDBRow,\n    MDBCol,\n    MDBContainer,\n    MDBIcon,\n  },\n  setup() {\n    const toast = useToast()\n    const showPassword = ref(false)\n    const showConfirmPassword = ref(false)\n    const schema = object({\n      email: string().required().email().label('Email'),\n      password: string().required().min(4).label('Password'),\n      name: string().required().min(4).label('Name'),\n      passwordConfirmation: string()\n        .required()\n        .oneOf([yupRef('password'), null], 'Passwords must match.'),\n    })\n\n    const { values, errors, meta, setFieldError } = useForm({\n      validationSchema: schema,\n      initialValues: {\n        email: '',\n        password: '',\n        name: '',\n        passwordConfirmation: '',\n      },\n    })\n    useField<string>('email')\n    useField<string>('password')\n    useField<string>('name')\n    useField<string>('passwordConfirmation')\n\n    const changeShowPassword = (): void => {\n      showPassword.value = !showPassword.value\n    }\n    const changeShowConfirmPassword = (): void => {\n      showConfirmPassword.value = !showConfirmPassword.value\n    }\n\n    const onSubmit = async (): Promise<void> => {\n      const { email, password, name } = values\n      if (!(email && password && name)) return\n      // TODO need to bcrypt this\n      const res = await register({\n        username: email,\n        password,\n        name,\n      })\n\n      if (res === 'Username already in use.') {\n        setFieldError('email', 'Email already in use.')\n        toast.error('Email already in use.')\n      }\n      if (res === 'Registered.') {\n        await router.push(\n          sessionStorage.getItem('redirectPathAfterAuth') || '/profile',\n        )\n        toast.success('Registration was successful!')\n      }\n    }\n\n    return {\n      showPassword,\n      showConfirmPassword,\n      values,\n      errors,\n      meta,\n      changeShowPassword,\n      changeShowConfirmPassword,\n      onSubmit,\n    }\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n.password-block {\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr auto;\n  grid-template-areas: 'input show';\n  &__input {\n    grid-area: input;\n  }\n  &__show {\n    grid-area: show;\n    width: 40px;\n    padding: 0;\n  }\n}\n</style>\n","\nimport {\n  MDBBtn,\n  MDBCol,\n  MDBContainer,\n  MDBIcon,\n  MDBInput,\n  MDBRow,\n} from 'mdb-vue-ui-kit'\nimport { useField, useForm } from 'vee-validate'\nimport { defineComponent, ref } from 'vue'\nimport { useToast } from 'vue-toastification'\nimport { object, ref as yupRef, string } from 'yup'\n\nimport { register } from '@/api/jwt-api/requests'\nimport ErrorField from '@/components/ErrorField.vue'\nimport router from '@/router'\n\nexport default defineComponent({\n  name: 'registration',\n  components: {\n    ErrorField,\n    MDBInput,\n    MDBBtn,\n    MDBRow,\n    MDBCol,\n    MDBContainer,\n    MDBIcon,\n  },\n  setup() {\n    const toast = useToast()\n    const showPassword = ref(false)\n    const showConfirmPassword = ref(false)\n    const schema = object({\n      email: string().required().email().label('Email'),\n      password: string().required().min(4).label('Password'),\n      name: string().required().min(4).label('Name'),\n      passwordConfirmation: string()\n        .required()\n        .oneOf([yupRef('password'), null], 'Passwords must match.'),\n    })\n\n    const { values, errors, meta, setFieldError } = useForm({\n      validationSchema: schema,\n      initialValues: {\n        email: '',\n        password: '',\n        name: '',\n        passwordConfirmation: '',\n      },\n    })\n    useField<string>('email')\n    useField<string>('password')\n    useField<string>('name')\n    useField<string>('passwordConfirmation')\n\n    const changeShowPassword = (): void => {\n      showPassword.value = !showPassword.value\n    }\n    const changeShowConfirmPassword = (): void => {\n      showConfirmPassword.value = !showConfirmPassword.value\n    }\n\n    const onSubmit = async (): Promise<void> => {\n      const { email, password, name } = values\n      if (!(email && password && name)) return\n      // TODO need to bcrypt this\n      const res = await register({\n        username: email,\n        password,\n        name,\n      })\n\n      if (res === 'Username already in use.') {\n        setFieldError('email', 'Email already in use.')\n        toast.error('Email already in use.')\n      }\n      if (res === 'Registered.') {\n        await router.push(\n          sessionStorage.getItem('redirectPathAfterAuth') || '/profile',\n        )\n        toast.success('Registration was successful!')\n      }\n    }\n\n    return {\n      showPassword,\n      showConfirmPassword,\n      values,\n      errors,\n      meta,\n      changeShowPassword,\n      changeShowConfirmPassword,\n      onSubmit,\n    }\n  },\n})\n","import { render } from \"./registration.vue?vue&type=template&id=760b1d34&scoped=true\"\nimport script from \"./registration.vue?vue&type=script&lang=ts\"\nexport * from \"./registration.vue?vue&type=script&lang=ts\"\n\nimport \"./registration.vue?vue&type=style&index=0&id=760b1d34&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-760b1d34\"\n\nexport default script"],"sourceRoot":""}