{"version":3,"sources":["webpack:///./src/components/Spinner.vue?7726","webpack:///./src/components/Spinner.vue","webpack:///./src/components/Spinner.vue?2236","webpack:///./src/components/Spinner.vue?8361","webpack:///./src/views/admin-layout/category/edit-categories.vue","webpack:///./src/components/admin-layout/category/edit-categories/EditCategoriesItem.vue","webpack:///./src/components/admin-layout/category/edit-categories/EditCategoriesItem.vue?db57","webpack:///./src/components/admin-layout/category/edit-categories/EditCategoriesItem.vue?878a","webpack:///./src/views/admin-layout/category/edit-categories.vue?302a","webpack:///./src/views/admin-layout/category/edit-categories.vue?9b2f","webpack:///./src/assets/images/image-container/no-photo.svg","webpack:///./src/components/admin-layout/category/edit-categories/EditCategoriesItem.vue?3dde","webpack:///./src/components/ImageContainer.vue","webpack:///./src/components/ImageContainer.vue?cdf1","webpack:///./src/components/ImageContainer.vue?68fd","webpack:///./src/helpers/slicer.ts","webpack:///./src/helpers/EventBus.ts","webpack:///./src/components/ImageContainer.vue?e42d"],"names":["class","color","name","components","MDBSpinner","MDBCol","render","__scopeId","loading","data","length","col","to","item","index","key","height","width","img-url","imgUrl","id","textSlicer","removeItem","ImageContainer","MDBBtn","MDBListGroupItem","props","type","Object","setup","toast","error","publish","undefined","EditCategoriesItem","MDBContainer","MDBRow","MDBListGroup","Spinner","useFetch","dataLoader","Promise","value","subscribe","unsubscribe","module","exports","src","alt","style","hasHttpInUrl","String","required","match","input","sizeWithoutDots","sliced","slice","receivers","topic","subject","this","getTopicReceivers","map","receiver","resolve","push","eventBus","EventBus"],"mappings":"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","file":"js/edit-categories-list.7318e5f3.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Spinner.vue?vue&type=style&index=0&id=2d917819&scoped=true&lang=scss\"","<template>\n  <MDBCol\n    class=\"d-flex justify-content-center align-items-center custom-spinner\"\n  >\n    <MDBSpinner color=\"primary\" />\n  </MDBCol>\n</template>\n\n<script lang=\"ts\">\nimport { MDBCol, MDBSpinner } from 'mdb-vue-ui-kit'\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'Spinner',\n  components: {\n    MDBSpinner,\n    MDBCol,\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n.custom-spinner {\n  position: fixed;\n  height: 80vh;\n  width: 100vw;\n}\n</style>\n","\nimport { MDBCol, MDBSpinner } from 'mdb-vue-ui-kit'\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'Spinner',\n  components: {\n    MDBSpinner,\n    MDBCol,\n  },\n})\n","import { render } from \"./Spinner.vue?vue&type=template&id=2d917819&scoped=true\"\nimport script from \"./Spinner.vue?vue&type=script&lang=ts\"\nexport * from \"./Spinner.vue?vue&type=script&lang=ts\"\n\nimport \"./Spinner.vue?vue&type=style&index=0&id=2d917819&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-2d917819\"\n\nexport default script","<template>\n  <MDBContainer>\n    <MDBRow v-if=\"!loading\">\n      <MDBCol\n        col=\"12\"\n        v-if=\"!loading && data && data.length === 0\"\n        class=\"d-flex justify-content-center pt-2\"\n      >\n        No categories yet. You can&thinsp;\n        <router-link :to=\"{ name: 'create-category' }\">create one</router-link>.\n      </MDBCol>\n      <MDBCol v-else>\n        <MDBListGroup>\n          <EditCategoriesItem\n            v-for=\"(item, index) in data\"\n            :key=\"index\"\n            :data=\"item\"\n          />\n        </MDBListGroup>\n      </MDBCol>\n    </MDBRow>\n    <MDBRow><Spinner v-if=\"loading\" /></MDBRow>\n  </MDBContainer>\n</template>\n\n<script lang=\"ts\">\nimport { MDBCol, MDBContainer, MDBListGroup, MDBRow } from 'mdb-vue-ui-kit'\nimport { defineComponent, onUnmounted } from 'vue'\n\nimport { awaitUseFetch, useFetch } from '@/api/fetch-api/useFetch'\nimport { graphqlFetch } from '@/api/graphql-api/GraphqlApi'\nimport { GET_CATEGORIES_EDITLIST } from '@/api/graphql-api/queries/categoryQueries'\nimport EditCategoriesItem from '@/components/admin-layout/category/edit-categories/EditCategoriesItem.vue'\nimport Spinner from '@/components/Spinner.vue'\nimport { eventBus } from '@/helpers/EventBus'\nimport { ProductEditItem } from '@/types/product'\n\nexport default defineComponent({\n  name: 'edit-categories',\n  components: {\n    EditCategoriesItem,\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBListGroup,\n    Spinner,\n  },\n  setup() {\n    const { data, loading } = useFetch<ProductEditItem[]>(\n      'SWR',\n      '/categories-edit-list',\n      () => graphqlFetch(GET_CATEGORIES_EDITLIST),\n    )\n\n    async function dataLoader(): Promise<void> {\n      loading.value = true\n      data.value = await awaitUseFetch<ProductEditItem[]>(\n        'SWR',\n        '/categories-edit-list',\n        () => graphqlFetch(GET_CATEGORIES_EDITLIST),\n      )\n      loading.value = false\n    }\n\n    eventBus.subscribe('edit-categories-update', async () => {\n      await dataLoader()\n    })\n\n    onUnmounted(() => {\n      eventBus.unsubscribe('edit-categories-update')\n    })\n\n    return { data, loading }\n  },\n})\n</script>\n\n<style scoped lang=\"scss\"></style>\n\n<!--<template>-->\n<!--  <EditList entity=\"category\" />-->\n<!--</template>-->\n\n<!--<script lang=\"ts\">-->\n<!--import { defineComponent } from 'vue'-->\n\n<!--import EditList from '@/components/admin-layout/EditList/EditList.vue'-->\n\n<!--export default defineComponent({-->\n<!--  name: 'EditCategoriesList',-->\n<!--  components: { EditList },-->\n<!--})-->\n<!--</script>-->\n\n<!--<style scoped lang=\"scss\"></style>-->\n","<template>\n  <MDBListGroupItem>\n    <div class=\"edit-item\">\n      <div class=\"edit-item__image\">\n        <ImageContainer\n          height=\"140px\"\n          width=\"140px\"\n          :name=\"data.name\"\n          :img-url=\"data.imgUrl\"\n        />\n      </div>\n\n      <div class=\"edit-item__id\">ID: {{ data.id }}</div>\n\n      <div class=\"edit-item__name\">Name: {{ textSlicer(data.name, 20) }}</div>\n\n      <div class=\"edit-item__controls\">\n        <MDBBtn color=\"dark\" @click=\"removeItem\">Delete</MDBBtn>\n        <router-link\n          class=\"btn btn-light\"\n          :to=\"{ name: 'edit-category', params: { id: data.id } }\"\n        >\n          Edit\n        </router-link>\n      </div>\n    </div>\n  </MDBListGroupItem>\n</template>\n\n<script lang=\"ts\">\nimport { MDBBtn, MDBListGroupItem } from 'mdb-vue-ui-kit'\nimport { defineComponent } from 'vue'\nimport { useToast } from 'vue-toastification'\n\nimport { graphqlDelete } from '@/api/graphql-api/GraphqlApi'\nimport ImageContainer from '@/components/ImageContainer.vue'\nimport { eventBus } from '@/helpers/EventBus'\nimport { textSlicer } from '@/helpers/slicer'\nimport { CategoryEditItem } from '@/types/category'\n\nexport default defineComponent({\n  name: 'EditCategoriesItem',\n  components: { ImageContainer, MDBBtn, MDBListGroupItem },\n  props: {\n    data: {\n      type: Object as () => CategoryEditItem,\n    },\n  },\n  setup(props) {\n    const toast = useToast()\n    const removeItem = (): void => {\n      if (!props.data) return\n      graphqlDelete('category', props.data.id)\n      toast.error('Category has been deleted!')\n      eventBus.publish('edit-categories-update', undefined)\n    }\n    return { textSlicer, removeItem }\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n.edit-item {\n  width: 100%;\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n  gap: 5px 20px;\n  align-items: center;\n  grid-template-areas:\n    'image id'\n    'image name'\n    'image controls';\n  &__image {\n    grid-area: image;\n  }\n  &__id {\n    grid-area: id;\n    font-size: 0.8rem;\n  }\n  &__name {\n    grid-area: name;\n    font-weight: 500;\n  }\n  &__controls {\n    grid-area: controls;\n    justify-self: end;\n  }\n}\n</style>\n","\nimport { MDBBtn, MDBListGroupItem } from 'mdb-vue-ui-kit'\nimport { defineComponent } from 'vue'\nimport { useToast } from 'vue-toastification'\n\nimport { graphqlDelete } from '@/api/graphql-api/GraphqlApi'\nimport ImageContainer from '@/components/ImageContainer.vue'\nimport { eventBus } from '@/helpers/EventBus'\nimport { textSlicer } from '@/helpers/slicer'\nimport { CategoryEditItem } from '@/types/category'\n\nexport default defineComponent({\n  name: 'EditCategoriesItem',\n  components: { ImageContainer, MDBBtn, MDBListGroupItem },\n  props: {\n    data: {\n      type: Object as () => CategoryEditItem,\n    },\n  },\n  setup(props) {\n    const toast = useToast()\n    const removeItem = (): void => {\n      if (!props.data) return\n      graphqlDelete('category', props.data.id)\n      toast.error('Category has been deleted!')\n      eventBus.publish('edit-categories-update', undefined)\n    }\n    return { textSlicer, removeItem }\n  },\n})\n","import { render } from \"./EditCategoriesItem.vue?vue&type=template&id=0237fa97&scoped=true\"\nimport script from \"./EditCategoriesItem.vue?vue&type=script&lang=ts\"\nexport * from \"./EditCategoriesItem.vue?vue&type=script&lang=ts\"\n\nimport \"./EditCategoriesItem.vue?vue&type=style&index=0&id=0237fa97&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-0237fa97\"\n\nexport default script","\nimport { MDBCol, MDBContainer, MDBListGroup, MDBRow } from 'mdb-vue-ui-kit'\nimport { defineComponent, onUnmounted } from 'vue'\n\nimport { awaitUseFetch, useFetch } from '@/api/fetch-api/useFetch'\nimport { graphqlFetch } from '@/api/graphql-api/GraphqlApi'\nimport { GET_CATEGORIES_EDITLIST } from '@/api/graphql-api/queries/categoryQueries'\nimport EditCategoriesItem from '@/components/admin-layout/category/edit-categories/EditCategoriesItem.vue'\nimport Spinner from '@/components/Spinner.vue'\nimport { eventBus } from '@/helpers/EventBus'\nimport { ProductEditItem } from '@/types/product'\n\nexport default defineComponent({\n  name: 'edit-categories',\n  components: {\n    EditCategoriesItem,\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBListGroup,\n    Spinner,\n  },\n  setup() {\n    const { data, loading } = useFetch<ProductEditItem[]>(\n      'SWR',\n      '/categories-edit-list',\n      () => graphqlFetch(GET_CATEGORIES_EDITLIST),\n    )\n\n    async function dataLoader(): Promise<void> {\n      loading.value = true\n      data.value = await awaitUseFetch<ProductEditItem[]>(\n        'SWR',\n        '/categories-edit-list',\n        () => graphqlFetch(GET_CATEGORIES_EDITLIST),\n      )\n      loading.value = false\n    }\n\n    eventBus.subscribe('edit-categories-update', async () => {\n      await dataLoader()\n    })\n\n    onUnmounted(() => {\n      eventBus.unsubscribe('edit-categories-update')\n    })\n\n    return { data, loading }\n  },\n})\n","import { render } from \"./edit-categories.vue?vue&type=template&id=26529727\"\nimport script from \"./edit-categories.vue?vue&type=script&lang=ts\"\nexport * from \"./edit-categories.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","module.exports = __webpack_public_path__ + \"img/no-photo.cfebf14d.svg\";","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./EditCategoriesItem.vue?vue&type=style&index=0&id=0237fa97&scoped=true&lang=scss\"","<template>\n  <div class=\"image-container\" :style=\"`height: ${height}; width: ${width};`\">\n    <div\n      v-if=\"hasHttpInUrl(imgUrl)\"\n      class=\"background-image\"\n      :style=\"`background-image: url(${imgUrl});`\"\n    />\n    <!--    <img-->\n    <!--      class=\"image-container__img\"-->\n    <!--      :src=\"imgUrl\"-->\n    <!--      alt=\"Image\"-->\n    <!--      v-if=\"hasHttpInUrl(imgUrl)\"-->\n    <!--    />-->\n    <img\n      class=\"image-container__placeholder\"\n      src=\"@/assets/images/image-container/no-photo.svg\"\n      alt=\"\"\n      v-else\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'ImageContainer',\n  props: {\n    height: {\n      type: String,\n      required: true,\n    },\n    width: {\n      type: String,\n      required: true,\n    },\n    imgUrl: {\n      type: String,\n      required: true,\n    },\n    name: {\n      type: String,\n      required: true,\n    },\n  },\n  setup() {\n    const hasHttpInUrl = (imgUrl: string): boolean => {\n      // it is emulate of checking image exist\n      return imgUrl.match(/(http(s?))/gim) != null\n    }\n    return {\n      hasHttpInUrl,\n    }\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n.background-image {\n  height: 100%;\n  width: 100%;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n.image-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &__img {\n    max-width: 100%;\n    max-height: 100%;\n  }\n  &__placeholder {\n    height: 50%;\n    width: 50%;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'ImageContainer',\n  props: {\n    height: {\n      type: String,\n      required: true,\n    },\n    width: {\n      type: String,\n      required: true,\n    },\n    imgUrl: {\n      type: String,\n      required: true,\n    },\n    name: {\n      type: String,\n      required: true,\n    },\n  },\n  setup() {\n    const hasHttpInUrl = (imgUrl: string): boolean => {\n      // it is emulate of checking image exist\n      return imgUrl.match(/(http(s?))/gim) != null\n    }\n    return {\n      hasHttpInUrl,\n    }\n  },\n})\n","import { render } from \"./ImageContainer.vue?vue&type=template&id=0c088326&scoped=true\"\nimport script from \"./ImageContainer.vue?vue&type=script&lang=ts\"\nexport * from \"./ImageContainer.vue?vue&type=script&lang=ts\"\n\nimport \"./ImageContainer.vue?vue&type=style&index=0&id=0c088326&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-0c088326\"\n\nexport default script","export function textSlicer(input: string, length: number): string {\n  if (input.length <= length) return input\n  const sizeWithoutDots = length - 3\n  const sliced = input.slice(0, sizeWithoutDots)\n  return sliced + '...'\n}\n","import { EventBusInterface, Receiver, Subject } from '@/types/eventBus'\n\nclass EventBus implements EventBusInterface {\n  receivers: {\n    [key: string]: Receiver[]\n  } = {}\n  public async publish(topic: string, subject: Subject): Promise<void> {\n    const receivers = this.getTopicReceivers(topic)\n    receivers.map(\n      (receiver) => new Promise((resolve) => resolve(receiver(subject))),\n    )\n  }\n  private getTopicReceivers(topic: string): Receiver[] {\n    if (!this.receivers[topic]) {\n      return []\n    }\n    return this.receivers[topic]\n  }\n  // private retryPublish(\n  //   topic: string,\n  //   subject: Subject,\n  //   receiver: Receiver\n  // ): void {\n  //   receiver(subject)\n  // }\n\n  public subscribe(topic: string, receiver: Receiver): void {\n    if (!this.receivers[topic]) {\n      this.receivers[topic] = []\n    }\n    this.receivers[topic].push(receiver)\n  }\n  public unsubscribe(topic: string): void {\n    // public unsubscribe(topic: string): void {\n    if (!this.receivers[topic]) {\n      return\n    }\n    // this.receivers[topic] = this.receivers[topic].filter(\n    //   item => item !== receiver\n    // )\n    this.receivers[topic] = []\n  }\n}\n\n// class SmsNotificationService implements Receiver {\n//   receive(topic: string, subject: Subject): void {\n//     console.log('Sms event received', topic, subject)\n//   }\n// }\n//\n// class CustomReceiver implements Receiver {\n//   receive(topic: string, subject: Subject): void {\n//     console.log('Event received', topic, subject)\n//   }\n// }\n//\n// class EmailNotificationService implements Receiver {\n//   receive(topic: string, subject: Subject): void {\n//     console.log('Email event received', topic, subject)\n//   }\n// }\n\nexport const eventBus = new EventBus()\n// export const customReceiver = new CustomReceiver()\n// const emailService = new EmailNotificationService()\n\n// eventBus.subscribe('notification', smsService)\n// eventBus.subscribe('notification', emailService)\n//\n// eventBus.publish('notification', 'name')\n//\n// eventBus.unsubscribe('notification', smsService)\n// eventBus.publish('notification', 'name 2')\n\n// // /* eslint-disable */\n// class EventBus {\n//   events: any\n//   constructor() {\n//     this.events = {}\n//   }\n//\n//   on(eventName: string, fn: any): void {\n//     console.log(fn)\n//     this.events[eventName] = this.events[eventName] || []\n//     this.events[eventName].push(fn)\n//   }\n//\n//   // off(eventName, fn) {\n//   //   if (this.events[eventName]) {\n//   //     for (let i = 0; i < this.events[eventName].length; i++) {\n//   //       if (this.events[eventName][i] === fn) {\n//   //         this.events[eventName].splice(i, 1)\n//   //         break\n//   //       }\n//   //     }\n//   //   }\n//   // }\n//   emit(eventName: string, data: any): void {\n//     if (this.events[eventName]) {\n//       this.events[eventName].forEach(function(fn: any) {\n//         fn(data)\n//       })\n//     }\n//   }\n// }\n//\n// export default new EventBus()\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ImageContainer.vue?vue&type=style&index=0&id=0c088326&scoped=true&lang=scss\""],"sourceRoot":""}